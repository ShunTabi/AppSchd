using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;
using System.Drawing;

namespace Schedule
{
    public class Schedule
    {
        private static string SQLLimit = FunFile.GetString(FunFile.iniAppSchd, "[DB]", "SQLLimit")[0];
        private static string now = "datetime(strftime('%s', 'now'), 'unixepoch', 'localtime')";
        public static string SQLSchedule0000 = $"SELECT SCHEDULEID,GOALNAME,PLANNAME,STATUSNAME,SCHEDULESTARTTIME,SCHEDULEENDTIME,SCHEDULEHOURS,SCHEDULEUPDATEDATE,ALERTSTATUS FROM T_SCHEDULE " +
            $"INNER JOIN T_PLAN USING(PLANID) " +
            $"INNER JOIN T_GOAL USING(GOALID) " +
            $"INNER JOIN T_STATUS USING(STATUSID) " +
            $"INNER JOIN T_PRIOR USING(PRIORID) " +
            $"LEFT OUTER JOIN(SELECT SCHEDULEID,'！' AS ALERTSTATUS FROM T_SCHEDULE WHERE STATUSID in (1,2) AND SCHEDULEENDTIME<{now}) USING(SCHEDULEID) " +
            $"WHERE SCHEDULEVISIBLESTATUS=1 AND SCHEDULEDATE LIKE @SCHEDULEDATE ORDER BY SCHEDULESTARTTIME LIMIT {SQLLimit}";
        public static string SQLSchedule0001 = $"SELECT SCHEDULEID,GOALNAME,PLANNAME,STATUSNAME,SCHEDULEDATE,SCHEDULESTARTTIME,SCHEDULEENDTIME,SCHEDULEHOURS,SCHEDULEUPDATEDATE,ALERTSTATUS FROM T_SCHEDULE " +
                $"INNER JOIN T_PLAN USING(PLANID) " +
                $"INNER JOIN T_GOAL USING(GOALID) " +
                $"INNER JOIN T_STATUS USING(STATUSID) " +
                $"INNER JOIN T_PRIOR USING(PRIORID) " +
                $"LEFT OUTER JOIN(SELECT SCHEDULEID,'！' AS ALERTSTATUS FROM T_SCHEDULE WHERE STATUSID in (1,2) AND SCHEDULEENDTIME<{now}) USING(SCHEDULEID) " +
                $"WHERE SCHEDULEVISIBLESTATUS=1 ORDER BY SCHEDULEDATE DESC,SCHEDULESTARTTIME LIMIT {SQLLimit}";
        public static string SQLSchedule0002 = $"SELECT SCHEDULEID,GOALNAME,PLANNAME,STATUSNAME,SCHEDULEDATE,SCHEDULESTARTTIME,SCHEDULEENDTIME,SCHEDULEHOURS,SCHEDULEUPDATEDATE,ALERTSTATUS FROM T_SCHEDULE " +
            $"INNER JOIN T_PLAN USING(PLANID) " +
            $"INNER JOIN T_GOAL USING(GOALID) " +
            $"INNER JOIN T_STATUS USING(STATUSID) " +
            $"INNER JOIN T_PRIOR USING(PRIORID) " +
            $"LEFT OUTER JOIN(SELECT SCHEDULEID,'！' AS ALERTSTATUS FROM T_SCHEDULE WHERE STATUSID in (1,2) AND SCHEDULEENDTIME<{now}) USING(SCHEDULEID) " +
            $"WHERE SCHEDULEVISIBLESTATUS=1 AND (GOALNAME LIKE @KEYWORD OR PLANNAME LIKE @KEYWORD) " +
            $"ORDER BY SCHEDULEDATE DESC,SCHEDULESTARTTIME LIMIT {SQLLimit}";
        public static string SQLSchedule0003 = "SELECT GOALNAME,PLANNAME,SCHEDULEDATE,SCHEDULESTARTTIME,SCHEDULEENDTIME FROM T_SCHEDULE INNER JOIN T_PLAN USING(PLANID) INNER JOIN T_GOAL USING(GOALID) WHERE SCHEDULEID=@SCHEDULEID";
        public static string SQLSchedule0004 = $"SELECT SCHEDULEID,GOALNAME,PLANNAME,PRIORSUBNAME,PRIORNAME,STATUSNAME,SCHEDULESTARTTIME,SCHEDULEENDTIME,SCHEDULEHOURS,SCHEDULELOCATION,SCHEDULEHEIGHT FROM T_SCHEDULE " +
                $"INNER JOIN T_PLAN USING(PLANID) " +
                $"INNER JOIN T_GOAL USING(GOALID) " +
                $"INNER JOIN T_STATUS USING(STATUSID) " +
                $"INNER JOIN T_PRIOR USING(PRIORID) " +
                $"LEFT OUTER JOIN(SELECT SCHEDULEID,'！' AS ALERTSTATUS FROM T_SCHEDULE WHERE STATUSID in (1,2) AND SCHEDULEENDTIME<{now}) USING(SCHEDULEID) " +
                $"WHERE SCHEDULEVISIBLESTATUS=1 AND SCHEDULEDATE LIKE @SCHEDULEDATE " +
                $"ORDER BY SCHEDULEDATE DESC,SCHEDULESTARTTIME";
        public static string SQLSchedule0005 = "SELECT SCHEDULESTARTTIME,SCHEDULEENDTIME FROM T_SCHEDULE WHERE SCHEDULEID != @SCHEDULEID AND SCHEDULEDATE=@SCHEDULEDATE";
        public static string SQLSchedule0010 = $"INSERT INTO T_SCHEDULE(PLANID,SCHEDULEDATE,SCHEDULESTARTTIME,SCHEDULEENDTIME,SCHEDULEHOURS,SCHEDULELOCATION,SCHEDULEHEIGHT,SCHEDULEUPDATEDATE) VALUES(@PLANID,@SCHEDULEDATE,@SCHEDULESTARTTIME,@SCHEDULEENDTIME,round(cast((strftime('%s', @SCHEDULEENDTIME) - strftime('%s', @SCHEDULESTARTTIME)) as REAL)/ 3600,2),@SCHEDULELOCATION,@SCHEDULEHEIGHT,{now})";
        public static string SQLSchedule0020 = $"UPDATE T_SCHEDULE SET PLANID=@PLANID,SCHEDULEDATE=@SCHEDULEDATE,SCHEDULESTARTTIME=@SCHEDULESTARTTIME,SCHEDULEENDTIME=@SCHEDULEENDTIME,SCHEDULEHOURS=round(cast((strftime('%s', @SCHEDULEENDTIME) - strftime('%s', @SCHEDULESTARTTIME)) as REAL)/ 3600,2),SCHEDULELOCATION=@SCHEDULELOCATION,SCHEDULEHEIGHT=@SCHEDULEHEIGHT,SCHEDULEUPDATEDATE={now} WHERE SCHEDULEID=@SCHEDULEID";
        public const string SQLSchedule0021 = "UPDATE T_SCHEDULE SET SCHEDULEVISIBLESTATUS=@VISIBLESTATUS WHERE SCHEDULEID=@SCHEDULEID";
        public const string SQLSchedule0022 = "UPDATE T_SCHEDULE SET STATUSID=@STATUSID WHERE SCHEDULEID=@SCHEDULEID";

        /* 
            public const string AppSchedule000430 = "DELETE FROM T_SCHEDULE WHERE SCHEDULEID = @SCHEDULEID";

            public static string AppSchedule000303 = $"SELECT REVIEWID,GOALNAME,PLANNAME,REVIEWNAME,STATUSNAME,REVIEWENDDATE,ALERTSTATUS FROM T_REVIEW " +
                $"INNER JOIN T_PLAN USING(PLANID) " +
                $"INNER JOIN T_GOAL USING(GOALID) " +
                $"INNER JOIN T_STATUS USING(STATUSID) " +
                $"LEFT OUTER JOIN(SELECT REVIEWID,'！' AS ALERTSTATUS FROM T_REVIEW WHERE STATUSID in (1,2) AND REVIEWENDDATE<{now}) USING(REVIEWID) " +
                $"WHERE GOALVISIBLESTATUS=1 AND PLANVISIBLESTATUS=1 AND REVIEWVISIBLESTATUS=1 AND T_REVIEW.STATUSID =3 AND (GOALNAME LIKE @KEYWORD OR PLANNAME LIKE @KEYWORD) " +
                $"ORDER BY REVIEWENDDATE,GOALNAME,PLANNAME LIMIT {SQLLimit}";
            public static string AppSchedule000304 = $"SELECT GOALNAME,PLANNAME,REVIEWNAME,STATUSNAME,REVIEWENDDATE FROM T_REVIEW " +
                $"INNER JOIN T_PLAN USING(PLANID) " +
                $"INNER JOIN T_GOAL USING(GOALID) " +
                $"INNER JOIN T_STATUS USING(STATUSID) " +
                $"LEFT OUTER JOIN(SELECT REVIEWID,'！' AS ALERTSTATUS FROM T_REVIEW WHERE STATUSID in (1,2) AND REVIEWENDDATE<{now}) USING(REVIEWID) " +
                $"WHERE GOALVISIBLESTATUS=1 AND PLANVISIBLESTATUS=1 AND REVIEWVISIBLESTATUS=1 AND REVIEWID = @REVIEWID " +
                $"ORDER BY REVIEWENDDATE,GOALNAME,PLANNAME LIMIT {SQLLimit}";
            public static string AppSchedule000310 = $"INSERT INTO T_REVIEW(PLANID,REVIEWNAME,REVIEWENDDATE,REVIEWUPDATEDATE) VALUES(@PLANID,@REVIEWNAME,@REVIEWENDDATE,{now})";
            public static string AppSchedule000320 = $"UPDATE T_REVIEW SET PLANID=@PLANID,REVIEWNAME=@REVIEWNAME,REVIEWENDDATE=@REVIEWENDDATE,REVIEWUPDATEDATE={now} WHERE REVIEWID=@REVIEWID";
            public const string AppSchedule000321 = "UPDATE T_REVIEW SET REVIEWVISIBLESTATUS=@VISIBLESTATUS WHERE REVIEWID=@REVIEWID";
            public const string AppSchedule000322 = "UPDATE T_REVIEW SET STATUSID=@STATUSID WHERE REVIEWID=@REVIEWID";
            public const string AppSchedule000330 = "DELETE FROM T_REVIEW WHERE REVIEWID = @REVIEWID";
         */
        public static Image UpdateImg = Image.FromFile(@".\resources\png\Update.png");
        public static Image ToRecycleBinImg = Image.FromFile(@".\resources\png\ToRecycleBin.png");
        public static Image ToStorageBinImg = Image.FromFile(@".\resources\png\ToStorageBin.png");
        public static Image AddImg = Image.FromFile(@".\resources\png\Add.png");
        public static Image StatusImg = Image.FromFile(@".\resources\png\Status.png");
        public static ScheduleSearch ScheduleSearchInstance = null;
        public static ScheduleForm ScheduleFormInstance = null;

        public class DataGridViewEx : DataGridView
        {
            public DataGridViewEx()
            {
                this.DoubleBuffered = true;
            }
        }
        public void MainClassExec(Panel MainPanel)
        {
            Task ActiveTask = FunFile.EvtProc("Schedule Loaded!", 1);
            UserControl ScheduleInstance = new ScheduleSchedule
            {
                Dock = DockStyle.Fill,
            };
            MainPanel.Controls.Add(ScheduleInstance);
        }
    }
}
